#!/bin/sh
# 
# - deal with compressed archives created by pupsave backup
# - called by init
# - $1 = compressed archive
# - stores $PUPSAVE in /tmp/psb
# - it only requires the full path to the compressed archive, nothing else
#

PSPATH=$1

case "$PSPATH" in
 *.tar.[gx]z) ok=1;;
 *) exit ;;
esac

PSPATH_NOTGZ=${PSPATH%.tar.[gx]z}   #remove trailing 'tar.[gx]z'
echo "PSPATH_NOTGZ=${PSPATH_NOTGZ}" #debug

case "$PSPATH" in
  *".2fs"*|*".3fs"*|*".4fs"*) savefile="yes" ;;
  *) savefolder="yes" ;;
esac

case "$PSPATH" in
  *.tar.gz) TAROPT="-z" ;;
  *.tar.xz) TAROPT="-J" ;;
esac

echo "savefile=${savefile}"     #debug
echo "savefolder=${savefolder}" #debug
cdir=$(pwd)

if [ "$savefolder" = "yes" ] ; then
  mkdir -p "$PSPATH_NOTGZ"
  cd "$PSPATH_NOTGZ"
  echo "Extracting ${PSPATH##*/}..." >/dev/console #basename
  tar -x $TAROPT -f "$PSPATH" && TAROK=yes
  itsinside=$(ls -d ${DISTRO_FILE_PREFIX}save* | head -n 1)
  if [ "$itsinside" ] ; then
    cd "$cdir"
    mv -fv "$PSPATH_NOTGZ" "$PSPATH_NOTGZ".2
    sync
    mv -fv "$PSPATH_NOTGZ".2/${itsinside} "$PSPATH_NOTGZ"
    sync
    rm -rfv "$PSPATH_NOTGZ".2
  fi
else #savefile
  cd "${PSPATH%/*}" #dirname $PSPATH
  echo "Extracting ${PSPATH##*/}..." >/dev/console #basename $PSPATH
  tar -x $TAROPT -f "$PSPATH" && TAROK=yes
fi

echo "TAROK=${TAROK}" #debug
if [ "$TAROK" = "yes" ] ; then
  PUPSAVE=${PUPSAVE%.tar.[gx]z} #remove trailing 'tar.[gx]z'
  rm -fv "$PSPATH"
else
  PUPSAVE=""
  echo "Error extracting ${PSPATH##*/}"
  echo -e "\\033[1;31mError extracting ${PSPATH##*/}\\033[0;39m" >/dev/console #31=red
  [ "$savefolder" = "yes" ] && rm -rf "$PSPATH_NOTGZ"
  [ "$savefile" = "yes" ] && rm -fv "$PSPATH_NOTGZ"
fi

echo -n "$PUPSAVE" > /tmp/psb

cd $cdir
echo -e "----\n" #debug

### END ###