#!/bin/sh

mntfunc() {
 MNT_T="$1"    #ex: vfat
 MNT_DEV="$2"  #ex: /dev/sda1
 MNT_DIR="$3"  #ex: /mnt/sda1
 case $MNT_T in
  ntfs)
   ntfs-3g $MNT_DEV $MNT_DIR -o umask=0,no_def_opts,noatime,rw,silent 2>/dev/null
   ntfsRETVAL=$?
   [ $ntfsRETVAL -eq 0 ] && return 0
   if [ $ntfsRETVAL -eq 14 ];then
    echo -n "ERROR: Windows NTFS hibernated partition, cannot mount"
    return 14
   else
    ntfs-3g $MNT_DEV $MNT_DIR -o umask=0,no_def_opts,noatime,rw,force,silent 2>/dev/null
   fi
  ;;
  *) mount -t $MNT_T $MNT_DEV $MNT_DIR ;;
 esac
 return $?
}

#-------

if [ ! -f /tmp/sys.log ] ; then
  syslogd -O /tmp/sys.log
  klogd
fi
dmesg > /tmp/dmesg.txt
ps > /tmp/ps.txt
mount > /tmp/mount.txt
cat /proc/partitions > /tmp/partitions.txt
lsof > /tmp/lsof.txt
df > /tmp/df.txt

PARTITIONS=$(cat /proc/partitions | grep -o sd[a-z][0-9]* | tr '\n' ' ')

echo "We're going to save debug info for further analysis.."
echo
echo "These are the available partitions:"
echo " $PARTITIONS"
echo
echo -n "Type partition name: "
read xpart
if [ ! -b /dev/$xpart ] ; then
  echo "$xpart: not a valid partition"
  exit 1
fi
echo

if [ "$(mount | grep "^/dev/$xpart")" = "" ] ; then
  echo "* Mounting $xpart"
  mkdir -p /mnt/$xpart
  mntfunc $(guess_fstype /dev/$xpart) /dev/$xpart /mnt/$xpart
  if [ $? -ne 0 ] ; then
    echo "Coult not mount $xpart... sorry"
    exit 1
  fi
fi
mkdir -p /mnt/$xpart/zz_initrd_tmp
echo "* Copying /tmp/* to /mnt/$xpart/zz_initrd_tmp"
cp -r /tmp/* /mnt/$xpart/zz_initrd_tmp/
echo "* Unmounting $xpart"
umount /mnt/$xpart
echo
echo "Done.. reboot and find $xpart/zz_initrd_tmp"

killall syslogd 2>/dev/null
killall klogd 2>/dev/null

### END ###
