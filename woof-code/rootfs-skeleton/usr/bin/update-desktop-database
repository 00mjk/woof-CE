#!/bin/bash
#This was a place holder in case the desktop-file-utils is not installed
#It generates xdg file association database. It works the same as the binary update-desktop-database

process_mime_cache(){

	path1="$1"
	(
	find "$path1/" -name '*.desktop' | \
	while read dfile
	do
		MT=
		while read l ; do
			case $l in MimeType=*)
				MT=$l ; break ;;
			esac
		done < "$dfile"
		#-
		if ! [ "$MT" ] ; then
			continue
		fi
		#-
		bname=${dfile##*/} #$(basename "$dfile")
		MM=${MT##*=}       #cut -f 2 -d '='
		MM=${MM//;/ }      #tr ';' ' '
		#-
		for xMime in $MM
		do
			echo "$xMime|${bname}"
		done
	done
	) > "$path1/mimeinfo.cache.pre"

	cur_mime=
	prev_mime=
	(
	echo -n "[MIME Cache]"
	sort "$path1/mimeinfo.cache.pre" | \
	while IFS="|" read cur_mime desktop_file
	do
		if ! [ "$cur_mime" ] ; then
			continue
		fi
		if [ "$cur_mime" = "$prev_mime" ] ; then
			echo -n ";${desktop_file}"
		else
			echo
			echo -n "$cur_mime=${desktop_file}"
		fi
		prev_mime="$cur_mime"
	done
	echo
	) > "$path1/mimeinfo.cache"

	rm -f /tmp/desktop-files.tmp "$path1/mimeinfo.cache.pre"
}

#====================================================

if [ "$1" = "" ]; then
	for xdg_path in "$HOME/.local/share/applications" /usr/share/applications /usr/local/share/applications 
	do
		[ -e "$xdg_path" ] && process_mime_cache "$xdg_path"
	done
else
	[ -e "$1" ] && process_mime_cache "$@"
fi

### END ###
