#!/bin/bash
#(c) Copyright 2013 Barry Kauler, bkhome.org - GPL3 (/usr/share/doc/legal)
#
# 50-udev-puppy-basic.rules
# 
# env. variables: ACTION=add, DEVNAME=/dev/sda1,
#                 ID_PART_ENTRY_SIZE=15603712, ID_FS_TYPE=ntfs, ID_FS_LABEL_ENC=aaa etc..

#exec &>>/tmp/${0##*/}.log ; set -x ; env #debug

eval $@

DEV_NAME=${DEV_NAME##*/}
case $DEV_NAME in
	sd*|mmc*|nvme*|sr*) ok=1 ;; #allowed devices
	*) exit 1 ;;
esac

eval $(env)

if [ -f /tmp/pup_event_frontend_display ] ; then
	. /tmp/pup_event_frontend_display
	export DISPLAY
else
	exit 1
fi

. /etc/eventmanager #has RAMSAVEINTERVAL, HOTPLUGNOISY, BACKENDON, POWERTIMEOUT
if [ "$HOTPLUGON" != "true" -o "$BACKENDON" != "true" ] ; then
	exit 1
fi

. /usr/local/pup_event/frontend_funcs
. /etc/rc.d/functions_x #misc functions

export FRONTEND_CHANGE=1

DRV_NAME=$(fx_get_drvname $DEV_NAME)
if [ -e /sys/block/${DEV_NAME} ] ; then
	DEV_NAME_IS_DRV=1
fi

read -r SCRN_X < /tmp/pup_event_frontend_scrn_x
read -r SCRN_Y < /tmp/pup_event_frontend_scrn_y

if [ "$ACTION" = "change" ] ; then
	UEVENT_CHANGE=1
	case $DEV_NAME in
		sr*)
			# frontend_timeout handles the situation if udev is misbehaving 
			# and not properly reporting hotplug events for optical drives
			FC_OPTICAL_DRV=1
			if [ "$ID_CDROM_MEDIA_STATE" = "complete" ] ; then
				ACTION='add'
			elif [ "$ID_CDROM_MEDIA" != "1" ] ; then
				ACTION='remove'
			else
				exit
			fi
			;;
		sd*|mmc*|nvme*)
			#we want to completely refresh the desktop drive icons...
			if [ "$DEV_NAME_IS_DRV" = "1" ] ; then
				ls -d /root/.pup_event/drive_${DEV_NAME}* | while read dev ; do
					DRV_NAME=${dev##*_}
					if [ -d /root/.pup_event/drive_${DRV_NAME} ];then
						remove_pinboard_func #needs DRV_NAME
					fi
				done
				rm -rf /root/.pup_event/drive_${DEV_NAME}* 2>/dev/null
				grep "${DEV_NAME}.*" /proc/partitions | tr -s ' ' | cut -f 5 -d ' ' | \
				while read dev ; do $0 ACTION=changed DEV_NAME=$dev ; done
			fi
			exit
			;;
	esac
fi

if [ "$ACTION" = "changed" ] ; then
	unset ID_*
	UEVENT_CHANGE=1
	ACTION='add'
fi

#create or remove desktop drive icons...
case $ACTION in
	add)
		# detect label change
		if [ "$DRV_LABEL" ] ; then
			if [ -f /root/.pup_event/drive_${DRV_NAME}_label ] ; then
				read -r DRV_LABEL2 < /root/.pup_event/drive_${DRV_NAME}_label
				if [ "$DRV_LABEL" != "$DRV_LABEL2" ] ; then
					rm -rf /root/.pup_event/drive_${DEV_NAME}*
				fi
			fi
			echo -n "$DRV_LABEL" > /root/.pup_event/drive_${DRV_NAME}_label
		fi

		[ -e /root/.pup_event/drive_${DEV_NAME} ] && exit #desktop icon (and partitions) already exist.

		PROBEPART="`probepart -k -extra-info $DEV_NAME | grep -E 'audiocd|btrfs|ext2|ext3|ext4|f2fs|hfs|iso9660|jfs|minix|msdos|ntfs|reiser|udf|vfat|exfat|xfs|crypto_LUKS'`" #130610 screen out unwante# cat /sys/block/sda
		if [ "$DEV_NAME_IS_DRV" = "1" ] ; then
			IFS="|" read -r DEV MEDIA INFO ZZ <<< "$(probedisk $DRV_NAME)"
			echo -n $MEDIA > /root/.pup_event/drive_${DRV_NAME}_media
			echo -n $INFO > /root/.pup_event/drive_${DRV_NAME}_info
		else
			read -r MEDIA < /root/.pup_event/drive_${DRV_NAME}_media
			read -r INFO < /root/.pup_event/drive_${DRV_NAME}_info
		fi

		PROBEDISK="/dev/$DRV_NAME|$MEDIA|$INFO"
		DRV_CATEGORY="$MEDIA"
		DRV_DESCRIPTION="$INFO"

		#'startup' param just prevents func from running 'probepart'...
		if [ -n "$PROBEPART" ] ; then
			create_icon_func startup #uses DEV_NAME, DRV_CATEGORY, DRV_DESCRIPTION
		fi

		# 'change' uevent is only processed for optical drives
		if [ "$FC_OPTICAL_DRV" != "1" ] ; then
			if [ "$UEVENT_CHANGE" = "1" ] ; then
				#the real uevent was 'change'
				exit
			fi
		fi
		if [ "$DEV_NAME_IS_DRV" = "1" ] ; then
			if [ "$HOTPLUGNOISY" = "true" ] ; then
				/root/.pup_event/drive_${DEV_NAME}/AppRun ${DRV_CATEGORY} & #handler script.
			fi
		fi
		;;

	remove)
		[ ! -e /root/.pup_event/drive_${DEV_NAME} ] && exit #desktop icon (and partitions) already removed.
		if [ "`pidof gtkdialog_pmount`" != "" ];then #if pmount running, refresh it.
			killall gtkdialog_pmount 2>/dev/null
			sleep 0.1
			pmount & #100613 fix from shinobar.
		fi
		remove_pinboard_func #needs DEV_NAME
		rm -rf /root/.pup_event/drive_${DEV_NAME}* 2>/dev/null
		;;
esac

### END ###
